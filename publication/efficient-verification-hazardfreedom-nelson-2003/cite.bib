@inproceedings{EfficientVerificationHazardfreedom_nelson_2003,
 abstract = {This paper presents an efficient method for verifying hazard freedom in timed asynchronous circuits. Timed circuits are a class of asynchronous circuits that utilize explicit timing information for optimization throughout the entire design process. In asynchronous circuits, correct operation requires that there are no hazards in the circuit implementation. Therefore, when designing an asynchronous circuit, each internal node and output of the circuit must be verified for hazard-freedom to ensure correct operation. Current verification algorithms for timed asynchronous circuits require an explicit state exploration often resulting in state explosion for even modest sized examples. The goal of this work is to abstract the behavior of internal nodes and utilize this information to make a conservative determination of hazard-freedom for each node in the circuit. Experimental results indicate that this approach is substantially more efficient than existing timing verification tools. These results also indicate that this method scales well for large examples. It is capable of analyzing circuits in less than a second that could not be previously analyzed. While this method is conservative in that some false hazards may be reported, our results indicate that the number of false hazards is small.},
 annotation = {00000},
 author = {Nelson, C.A. and Myers, C.J. and Yoneda, T.},
 booktitle = {ICCAD-2003. International Conference on Computer Aided Design (IEEE Cat. No.03CH37486)},
 doi = {10.1109/ICCAD.2003.159719},
 keywords = {asynchronous circuits,circuit,circuit synthesis,circuit testing,design optimization,explosion,formal verification,hazard freedom verification,hazards,libraries,optimization,permission,petri nets,process design,time petri nets,timed asynchronous circuits design,timing,timing circuits,timing verification tools,verification algorithms},
 month = {November},
 pages = {424--431},
 title = {Efficient Verification of Hazard-Freedom in Gate-Level Timed Asynchronous Circuits},
 year = {2003}
}

